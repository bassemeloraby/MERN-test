(()=>{var e={582:e=>{"use strict";e.exports=require("cors")},142:e=>{"use strict";e.exports=require("dotenv")},632:e=>{"use strict";e.exports=require("ejs")},860:e=>{"use strict";e.exports=require("express")},567:e=>{"use strict";e.exports=require("method-override")},185:e=>{"use strict";e.exports=require("mongoose")}},t={};function r(s){var o=t[s];if(void 0!==o)return o.exports;var i=t[s]={exports:{}};return e[s](i,i.exports,r),i.exports}(()=>{const e=r(860),t=r(582),s=r(185),o=e(),i=r(567),{render:n}=r(632);r(142).config(),o.use(t()),o.use(e.urlencoded({extended:!0})),o.use(e.json()),o.use(i("_method",{methods:["POST","GET"]})),o.set("view engine","ejs"),o.use(e.static("public"));const d=process.env.PORT||"3000",c=process.env.ATLAS_URI;s.connect(c,{useNewUrlParser:!0,useUnifiedTopology:!0},(e=>{console.log("connected")}));const u=new s.Schema({title:{type:String,required:!0}}),p=s.model("Task",u);o.post("/create",((e,t)=>{new p({title:e.body.title}).save().then((()=>t.redirect("/")))})),o.get("/",((e,t)=>{p.find({},((e,r)=>{e?console.log(`there is an error ${e}`):t.render("todo.ejs",{todotasks:r})}))})),o.delete("/delete/:id",((e,t)=>{p.deleteOne({_id:e.params.id},(e=>{e?console.log(`there is an error ${e}`):t.redirect("/")}))})),o.get("/update/:id",((e,t)=>{const r=e.params.id;p.find({},((e,s)=>{t.render("todoEdit.ejs",{todotasks:s,idTask:r})}))})),o.put("/update/:id",((e,t)=>{const r=e.params.id;p.findByIdAndUpdate(r,{title:e.body.title},(e=>{if(e)return t.send(500,e);t.redirect("/")}))})),o.get("/admin",((e,t)=>{t.render("admin")})),o.listen(d,(()=>{console.log(`Example app listening on port ${d}`)}))})()})();